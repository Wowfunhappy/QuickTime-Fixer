//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCoding.h"
#import "NSCopying.h"
#import "NSURLConnectionDelegate.h"

@class NSError, NSHTTPURLResponse, NSMutableData, NSString, NSURLConnection;

@interface MGVimeoAccount : NSObject <NSURLConnectionDelegate, NSCoding, NSCopying>
{
    NSString *_authTokenSecret;
    NSString *_authToken;
    NSString *_userName;
    NSString *_password;
    id <MGVimeoAccountAuthenticationDelegate> _delegate;
    NSURLConnection *_uploadQuotaConnection;
    NSURLConnection *_checkAuthTokenConnection;
    NSMutableData *_checkAuthTokenDownloadedData;
    NSMutableData *_quotaDownloadedData;
    NSError *_error;
    BOOL _authenticating;
    BOOL _authenticationCancelled;
    BOOL _pro;
    BOOL _hasQuotaInfo;
    BOOL _authTokenValid;
    NSHTTPURLResponse *_response;
    unsigned long long _availableUploadDataSize;
    BOOL _reachedMaxNumberOfHDUploads;
    BOOL _reachedMaxNumberOfSDUploads;
}

+ (id)keyPathsForValuesAffectingAuthenticating;
+ (id)storedAccountWithUserName:(id)arg1;
@property(nonatomic, getter=isAuthenticating) BOOL authenticating; // @synthesize authenticating=_authenticating;
@property(nonatomic, getter=isAuthTokenValid) BOOL authTokenValid; // @synthesize authTokenValid=_authTokenValid;
@property(nonatomic) BOOL reachedMaxNumberOfSDUploads; // @synthesize reachedMaxNumberOfSDUploads=_reachedMaxNumberOfSDUploads;
@property(nonatomic) BOOL reachedMaxNumberOfHDUploads; // @synthesize reachedMaxNumberOfHDUploads=_reachedMaxNumberOfHDUploads;
@property(nonatomic) BOOL hasQuotaInfo; // @synthesize hasQuotaInfo=_hasQuotaInfo;
@property(nonatomic) unsigned long long availableUploadDataSize; // @synthesize availableUploadDataSize=_availableUploadDataSize;
@property(retain, nonatomic) NSHTTPURLResponse *response; // @synthesize response=_response;
@property(nonatomic, getter=isPro) BOOL pro; // @synthesize pro=_pro;
@property(copy, nonatomic) NSString *authTokenSecret; // @synthesize authTokenSecret=_authTokenSecret;
@property(copy, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
@property(copy, nonatomic) NSError *error; // @synthesize error=_error;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(copy, nonatomic) NSString *userName; // @synthesize userName=_userName;
@property(nonatomic) id <MGVimeoAccountAuthenticationDelegate> delegate; // @synthesize delegate=_delegate;
- (id)description;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)processUploadQuota:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)handleInvalidExpiredToken;
- (void)cancelAuthentication;
@property(readonly, nonatomic, getter=isAuthenticationCancelled) BOOL authenticationCancelled;
- (void)checkAuthToken;
- (void)getQuotaInfo;
- (BOOL)canUploadFileSize:(unsigned long long)arg1 error:(id *)arg2;
- (unsigned long long)maxFileSizeForUploadInBytes;
- (unsigned long long)maxUploadDataPerWeekInBytes;
- (void)dealloc;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithUserName:(id)arg1 password:(id)arg2 authToken:(id)arg3 authTokenSecret:(id)arg4;

@end

