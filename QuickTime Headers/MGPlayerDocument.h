//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MGDocument.h"

#import "MGInspectionAttributeContainer.h"
#import "MGMediaCompositionAssetProvider.h"
#import "NSOpenSavePanelDelegate.h"

@class AVAsset, AVPlayer, AVPlayerItem, MGAssetChapterController, MGDocumentViewController<MGVisualContentContainer>, MGMediaClipAssetCache, MGMediaClipPreviewProvider, MGMediaComposition, MGMediaCompositionEditController, MGMediaCompositionPlayerItemController, MGMediaCompositionSelectionController, MGMediaCompositionUndoController, MGPlayerController, MGPlayerDocumentDRMHandler, MGPlayerLanguageController, MGSaveAsAccessoryViewController, NSArray, NSDate, NSMutableArray, NSMutableSet, NSTimer, NSWindowController;

@interface MGPlayerDocument : MGDocument <MGInspectionAttributeContainer, NSOpenSavePanelDelegate, MGMediaCompositionAssetProvider>
{
    NSArray *_assetLoaders;
    AVPlayerItem *_loadingPlayerItem;
    id _loadingPlayerItemStatusObserver;
    AVAsset *_asset;
    AVPlayer *_player;
    MGMediaComposition *_composition;
    MGMediaCompositionPlayerItemController *_compositionPlayerItemController;
    MGMediaCompositionEditController *_compositionEditController;
    MGMediaCompositionUndoController *_compositionUndoController;
    MGMediaCompositionSelectionController *_compositionSelectionController;
    MGMediaClipAssetCache *_mediaClipAssetCache;
    MGMediaClipPreviewProvider *_mediaClipPreviewProvider;
    NSWindowController *_assetLoadingSheetWindowController;
    CDUnknownBlockType _assetLoadingCancelHandler;
    NSMutableArray *_mediaClipAssetLoadingCompletionHandlers;
    NSMutableSet *_mediaClipAssetCacheMediaClipsToRemove;
    NSMutableArray *_playerItemUpdateCompletionHandlers;
    MGDocumentViewController<MGVisualContentContainer> *_mainViewController;
    MGPlayerDocumentDRMHandler *_playerDRMHandler;
    MGSaveAsAccessoryViewController *_savePanelAccessoryViewController;
    MGPlayerController *_playerController;
    MGPlayerLanguageController *_audioLanguageController;
    MGPlayerLanguageController *_subtitleLanguageController;
    id <MGExportPassthroughDelegate> _exportPassthroughDelegate;
    id <NSObject> _playerPeriodicTimeObserver;
    MGAssetChapterController *_chapterController;
    NSTimer *_profileFPSTimer;
    double _profileAvgFrameRate;
    double _profileFPSCount;
    unsigned int _playerIsPlaying:1;
    unsigned int _isCheckingCanClose:1;
    unsigned int _isClosed:1;
    unsigned int _isTearingDownAsset:1;
    unsigned int _isLoadingAssets:1;
    unsigned int _mediaClipAssetCacheNeedsCleanup:1;
    unsigned int _hasBecomeUntitledComposition:1;
    unsigned int _isForcingAudioOnlyUI:1;
    unsigned int _needsToSetUoProfilingEnvironment:1;
    unsigned int _orofilingEnvironmentSetUp:1;
    unsigned int _profilingPlaybackPerformance:1;
    NSDate *_dateAtStartPlaying;
    double _playbackDuration;
    unsigned int _mainWindowIsOnNonMainDisplay:1;
    unsigned int _playedOnNonMainDisplay:1;
}

+ (id)keyPathsForValuesAffectingCanShareAudio;
+ (id)keyPathsForValuesAffectingCanShareVideo;
+ (id)keyPathsForValuesAffectingCanShare;
+ (id)keyPathsForValuesAffectingChapterController;
+ (id)keyPathsForValuesAffectingClosedCaptionsAvailable;
+ (id)keyPathsForValuesAffectingMediaCompositionDocument;
+ (BOOL)autosavesInPlace;
+ (BOOL)canConcurrentlyReadDocumentsOfType:(id)arg1;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingMediaClipSelection;
+ (id)keyPathsForValuesAffectingMediaClipCount;
+ (id)keyPathsForValuesAffectingInspectionInformation;
+ (id)keyPathsForValuesAffectingInspectionAttributes;
@property(readonly, nonatomic) MGMediaClipPreviewProvider *mediaClipPreviewProvider; // @synthesize mediaClipPreviewProvider=_mediaClipPreviewProvider;
@property(readonly, nonatomic) MGMediaCompositionSelectionController *compositionSelectionController; // @synthesize compositionSelectionController=_compositionSelectionController;
@property(readonly, nonatomic) MGMediaCompositionEditController *compositionEditController; // @synthesize compositionEditController=_compositionEditController;
@property(readonly, nonatomic) MGMediaCompositionPlayerItemController *compositionPlayerItemController; // @synthesize compositionPlayerItemController=_compositionPlayerItemController;
@property(readonly, nonatomic) MGMediaComposition *composition; // @synthesize composition=_composition;
@property(readonly, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(readonly, nonatomic) AVAsset *asset; // @synthesize asset=_asset;
- (void)windowDidChangeScreen:(id)arg1;
- (id)audioDevice;
- (int)displayBrightness;
- (BOOL)isAirplayMirroringEnabled;
- (id)mediaCodecForPlayerItem:(id)arg1 withMediaType:(id)arg2;
- (double)durationRoundedToFirstTwoSignificantDigits:(double)arg1;
- (double)dataRateForPlayerItem:(id)arg1;
- (id)powerSourceType;
- (void)logMoviePlaybackStatistics;
- (BOOL)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;
- (void)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2 delegate:(id)arg3 didRecoverSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (id)willPresentError:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)userDefaultsDidChange:(id)arg1;
- (void)toggleForcedAudioOnly:(id)arg1;
- (void)loop:(id)arg1;
- (BOOL)canShareAudio;
- (BOOL)canShareVideo;
- (BOOL)canShare;
- (BOOL)isRestrictedFromSaving;
- (BOOL)isRestrictedFromEditing;
@property(readonly, nonatomic) MGAssetChapterController *chapterController;
- (void)mainMenuNeedsUpdate:(id)arg1;
- (void)updateSubtitlesMenu:(id)arg1;
- (void)updateAudioLanguageMenu:(id)arg1;
- (void)takeSubtitleLanguageFromRepresentedObjectOf:(id)arg1;
- (void)disableSubtitles:(id)arg1;
- (void)takeAudioLanguageFromRepresentedObjectOf:(id)arg1;
- (void)resetChapterLocale;
- (void)takeChapterLanguageFromRepresentedObjectOf:(id)arg1;
- (void)toggleClosedCaption:(id)arg1;
- (BOOL)closedCaptionsAvailable;
- (struct CGImage *)videoFrameAtTime:(CDStruct_1b6d18a9)arg1;
- (void)waitForPlayerItemToUpdateWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)makeCurrentPlayerItem:(id)arg1;
- (BOOL)replaceAllMediaClipsWithImpreciseDurations;
- (id)mediaClipWithPreciseDurationAfterReplacingMediaClip:(id)arg1;
- (id)mediaClipWithPreciseDurationToReplaceMediaClip:(id)arg1;
- (void)cleanUpMediaClipAssetCacheIfNeeded;
- (void)loadMissingAssetsForCompositionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)assetLoadingDidFinish;
- (void)assetLoadingSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)assetLoadingDidStartWithCancelHandler:(CDUnknownBlockType)arg1;
- (id)reusableAssetForMediaClip:(id)arg1;
- (void)setAsset:(id)arg1 forMediaClip:(id)arg2;
- (id)assetForMediaClip:(id)arg1;
@property(readonly, nonatomic) CDStruct_1b6d18a9 compositionDuration;
@property(nonatomic) BOOL playerIsPlaying;
- (void)updateMainViewControllerWithoutKVONotification;
- (id)mainViewController;
@property(readonly, nonatomic, getter=isMediaCompositionDocument) BOOL mediaCompositionDocument;
- (void)restoreStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)displayName;
- (void)showWindows;
- (void)updateChangeCount:(unsigned long long)arg1;
- (void)duplicateDocument:(id)arg1;
- (void)tearDownAsset;
- (void)playerDocument:(id)arg1 shouldClose:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)close;
- (void)canCloseDocumentWithDelegate:(id)arg1 shouldCloseSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (BOOL)_checkAutosavingPossibilityAndReturnError:(id *)arg1;
- (id)autosavingFileType;
- (void)autosaveWithImplicitCancellability:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)checkAutosavingSafetyAndReturnError:(id *)arg1;
- (void)singleJobProgressSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (void)document:(id)arg1 didSaveFromSavePanel:(BOOL)arg2 contextInfo:(void *)arg3;
- (BOOL)canAsynchronouslyWriteToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3;
- (void)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 delegate:(id)arg4 didSaveSelector:(SEL)arg5 contextInfo:(void *)arg6;
- (id)fileTypeFromLastRunSavePanel;
- (BOOL)prepareSavePanel:(id)arg1;
- (void)runModalSavePanelForSaveOperation:(unsigned long long)arg1 delegate:(id)arg2 didSaveSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (id)fileWrapperOfType:(id)arg1 error:(id *)arg2;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)fileURL;
- (id)fileType;
- (void)dealloc;
- (id)initWithContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)init;
- (BOOL)canExportPassthrough:(id)arg1;
- (void)setExportPassthroughDelegate:(id)arg1;
- (void)shareToFacebookAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)handleTrim:(id)arg1;
- (void)shareToiMovieSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)shareToMailSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)shareToFacebookSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)shareToFlickrSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)shareToYouTubeSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)shareToiTunesSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)saveForWebSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)shareToVimeoSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)shareToVimeoAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)shareToTudouAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)shareToYoukuAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)shareToVimeo:(id)arg1;
- (void)shareToPodcastProducer:(id)arg1;
- (void)shareToiMovie:(id)arg1;
- (void)shareToMail:(id)arg1;
- (void)shareToAirDrop:(id)arg1;
- (void)shareToiChat:(id)arg1;
- (void)shareToTudou:(id)arg1;
- (void)shareToYouku:(id)arg1;
- (void)shareToFacebook:(id)arg1;
- (void)shareToFlickrAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)shareToFlickr:(id)arg1;
- (void)shareToYouTubeAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)shareToYouTube:(id)arg1;
- (void)shareToiTunes:(id)arg1;
- (void)saveForWeb:(id)arg1;
- (void)shareButtonPressed:(id)arg1;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (id)sharingServicePicker:(id)arg1 sharingServicesForItems:(id)arg2 proposedSharingServices:(id)arg3;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (void)shareWithService:(id)arg1;
- (void)progressForJobController:(id)arg1 service:(id)arg2;
- (unsigned long long)indexOfSelectedMediaClip:(id)arg1;
@property(readonly, nonatomic) NSArray *mediaClipSelection;
@property(readonly, nonatomic) unsigned long long mediaClipCount;
@property(readonly, nonatomic) NSArray *inspectionInformation;
@property(readonly, nonatomic) NSArray *inspectionAttributes;
@property(readonly, nonatomic) MGPlayerController *inspectionPlayerController;
@property(readonly, nonatomic) double dataSize;
- (float)estimatedDataRateForAsset:(id)arg1;
- (CDStruct_1b6d18a9)duration;
- (id)handleShowRemoteHUDCommand:(id)arg1;
- (id)currentScreenCompression;
- (id)currentMovieCompression;
- (id)currentAudioCompression;
- (id)currentVideoRecordingDevice;
- (id)currentAudioRecordingDevice;
- (id)handleExportCommand:(id)arg1;
- (void)setVolume:(float)arg1;
- (float)volume;
- (void)setRate:(float)arg1;
- (float)rate;
- (BOOL)playing;
- (void)setMuted:(BOOL)arg1;
- (BOOL)muted;
- (void)setLoops:(BOOL)arg1;
- (BOOL)loops;
- (id)naturalDimensions;
- (id)dataRate;
- (id)durationInSeconds;
- (void)setCurrentTimeInSeconds:(id)arg1;
- (id)currentTimeInSeconds;
- (id)handleTrimCommand:(id)arg1;
- (id)handleStepForwardCommand:(id)arg1;
- (id)handleStepBackwardCommand:(id)arg1;
- (void)handleStopCommand:(id)arg1;
- (void)handlePauseCommand:(id)arg1;
- (void)handlePlayCommand:(id)arg1;
- (void)profileSampleCurrentFPS:(id)arg1;
@property(nonatomic, getter=isProfilingPlaybackPerformance) BOOL profilingPlaybackPerformance;
- (void)tearDownProfilingEnvironmentIfNeeded;
- (void)setUpProfilingEnvironmentIfNeeded;
- (void)setNeedsToSetUpProfilingEnvironment;
- (void)profileOpenPerformance;

@end

